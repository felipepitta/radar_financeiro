# ==============================================================================
# ARQUIVO: dashboard/pages/2_üí∏_Transacoes.py
# FUN√á√ÉO: Exibe a lista detalhada de transa√ß√µes do usu√°rio.
# ==============================================================================
import streamlit as st
import pandas as pd
import requests

st.set_page_config(page_title="Transa√ß√µes", layout="wide")
API_URL = "http://127.0.0.1:8000"

# Verifica se o usu√°rio est√° logado (agora checando pelo access_token)
if 'access_token' not in st.session_state:
    st.error("‚ö†Ô∏è Voc√™ precisa fazer o login para acessar esta p√°gina.")
    st.switch_page("login.py")
    st.stop()

st.title("üí∏ Minhas Transa√ß√µes")
st.markdown("Veja aqui o detalhe de todas as suas movimenta√ß√µes.")

# O cache agora depende do token, ent√£o se o usu√°rio mudar, os dados s√£o recarregados.
@st.cache_data
def carregar_transacoes(access_token):
    """Busca as transa√ß√µes do usu√°rio autenticado na API FastAPI."""
    if not access_token: return []
    try:
        headers = {"Authorization": f"Bearer {access_token}"}
        # Chama o novo endpoint seguro
        response = requests.get(f"{API_URL}/transactions/me", headers=headers)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        # Se o token for inv√°lido/expirado (erro 401), podemos deslogar o usu√°rio
        if e.response and e.response.status_code == 401:
            st.error("Sua sess√£o expirou. Por favor, fa√ßa o login novamente.")
            # Limpa a sess√£o e redireciona (opcional, mas recomendado)
            for key in list(st.session_state.keys()):
                del st.session_state[key]
            st.switch_page("login.py")
        else:
            st.error(f"N√£o foi poss√≠vel buscar suas transa√ß√µes. Verifique sua conex√£o.")
        return None

if lista_transacoes is not None:
    if lista_transacoes:
        df = pd.DataFrame(lista_transacoes)
        # Converte a coluna de valor para num√©rico para garantir a formata√ß√£o correta
        df['valor'] = pd.to_numeric(df['valor'])
        
        st.dataframe(
            df[['created_at', 'item', 'categoria', 'valor']],
            column_config={
                "created_at": st.column_config.DatetimeColumn("Data", format="DD/MM/YYYY HH:mm"),
                "item": "Item",
                "categoria": "Categoria",
                "valor": st.column_config.NumberColumn("Valor (R$)", format="R$ %.2f")
            },
            use_container_width=True, hide_index=True
        )
    else:
        st.success("‚úîÔ∏è Nenhuma transa√ß√£o encontrada. Comece a enviar seus gastos pelo WhatsApp!")